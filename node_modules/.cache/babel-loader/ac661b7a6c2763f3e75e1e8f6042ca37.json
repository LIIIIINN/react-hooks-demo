{"ast":null,"code":"var _jsxFileName = \"/Users/liulin/Desktop/react-prac-traversy-media-youtube/hooks-app/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport react, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo({\n  todo,\n  index,\n  completeTodo,\n  removeTodo\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textDecoration: todo.isCompleted ? 'line-through' : ''\n    },\n    className: \"todo\",\n    children: [todo.text, index, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => completeTodo(index),\n        children: \" complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeTodo(index),\n        children: \" x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Todo;\n\nfunction TodoForm({\n  addTodo\n}) {\n  _s();\n\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      value: value,\n      placeholder: \"add todo ...\",\n      onChange: e => setValue(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c2 = TodoForm;\n\nfunction App() {\n  _s2();\n\n  const [todos, setTodos] = useState([{\n    text: 'learn about react',\n    isCompleted: false\n  }, {\n    text: 'Meet friedns for lunch',\n    isCompleted: false\n  }, {\n    text: 'build really cool todo app',\n    isCompleted: false\n  }]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, {\n      text\n    }];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos, {\n      text\n    }];\n    newTodos.splice(index, 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [todos.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n        index: index,\n        todo: todo,\n        completeTodo: completeTodo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(TodoForm, {\n        addTodo: addTodo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"ZfZDFeNiLKWb3sDmG5wYuqZhhkc=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"TodoForm\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/liulin/Desktop/react-prac-traversy-media-youtube/hooks-app/src/App.js"],"names":["react","useState","Todo","todo","index","completeTodo","removeTodo","textDecoration","isCompleted","text","TodoForm","addTodo","value","setValue","handleSubmit","e","preventDefault","target","App","todos","setTodos","newTodos","splice","map"],"mappings":"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","sourcesContent":["import react, {useState} from 'react'\nimport './App.css'\n\nfunction Todo({todo, index, completeTodo, removeTodo}){\n  return(\n    <div style={{textDecoration: todo.isCompleted ? 'line-through': ''}} className=\"todo\" >\n      {todo.text}\n      {index}\n      <div>\n        <button onClick={() => completeTodo(index)}> complete</button>\n        <button onClick={() => removeTodo(index)}> x</button>\n      </div>\n    </div>\n  )\n}\n\nfunction TodoForm({addTodo}) {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e =>{\n    e.preventDefault();\n    if(!value) return;\n    addTodo(value);\n    setValue('');\n  }\n\n  return(\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\" \n        className=\"input\" \n        value={value} \n        placeholder = \"add todo ...\"\n        onChange={e => setValue(e.target.value)}>\n      </input>\n    </form>\n  )\n}\n\n\nfunction App(){\n  const[todos, setTodos] = useState([\n    {\n      text: 'learn about react',\n      isCompleted: false\n    },\n    {\n      text: 'Meet friedns for lunch',\n      isCompleted: false\n    },\n    {\n      text: 'build really cool todo app',\n      isCompleted: false\n    }\n  ]);\n\n  const addTodo = text =>{\n    const newTodos = [...todos, {text}];\n    setTodos(newTodos);\n\n  }\n\n  const completeTodo = index =>{\n    const newTodos = [...todos];\n    newTodos[index].isCompleted = true;\n    setTodos(newTodos);\n  }\n\n  const removeTodo = index => {\n    const newTodos = [...todos, {text}];\n    newTodos.splice(index, 1)\n  }\n\n  return(\n    <div className=\"app\">\n      <div className=\"todo-list\">\n        {todos.map((todo, index) =>(\n          <Todo \n            key={index} \n            index= {index} \n            todo={todo}\n            completeTodo = {completeTodo}  \n          />\n        ))}\n        <TodoForm addTodo={addTodo} />\n      </div>\n    </div>\n  )\n\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}